// Code generated by mockery v2.51.1. DO NOT EDIT.

package _mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// MockBreakdownPresentation is an autogenerated mock type for the BreakdownPresentation type
type MockBreakdownPresentation struct {
	mock.Mock
}

type MockBreakdownPresentation_Expecter struct {
	mock *mock.Mock
}

func (_m *MockBreakdownPresentation) EXPECT() *MockBreakdownPresentation_Expecter {
	return &MockBreakdownPresentation_Expecter{mock: &_m.Mock}
}

// ProcessFile provides a mock function with given fields: ctx
func (_m *MockBreakdownPresentation) ProcessFile(ctx *gin.Context) {
	_m.Called(ctx)
}

// MockBreakdownPresentation_ProcessFile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ProcessFile'
type MockBreakdownPresentation_ProcessFile_Call struct {
	*mock.Call
}

// ProcessFile is a helper method to define mock.On call
//   - ctx *gin.Context
func (_e *MockBreakdownPresentation_Expecter) ProcessFile(ctx interface{}) *MockBreakdownPresentation_ProcessFile_Call {
	return &MockBreakdownPresentation_ProcessFile_Call{Call: _e.mock.On("ProcessFile", ctx)}
}

func (_c *MockBreakdownPresentation_ProcessFile_Call) Run(run func(ctx *gin.Context)) *MockBreakdownPresentation_ProcessFile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*gin.Context))
	})
	return _c
}

func (_c *MockBreakdownPresentation_ProcessFile_Call) Return() *MockBreakdownPresentation_ProcessFile_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockBreakdownPresentation_ProcessFile_Call) RunAndReturn(run func(*gin.Context)) *MockBreakdownPresentation_ProcessFile_Call {
	_c.Run(run)
	return _c
}

// NewMockBreakdownPresentation creates a new instance of MockBreakdownPresentation. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBreakdownPresentation(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBreakdownPresentation {
	mock := &MockBreakdownPresentation{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
